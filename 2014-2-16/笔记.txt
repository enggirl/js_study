ajax/jsonp

ajax：
1.创建
2.连接
3.发送
4.接收

---------------------------------------------------------------------------------------

GET――地址里
1.容量小		4-10K
2.不安全


POST――不在地址里
1.容量大		1-2G
2.相对安全


https://

---------------------------------------------------------------------------------------

异步：一个操作没完成，其他操作也可以进行
同步：一个操作没完成，其他操作不能进行

---------------------------------------------------------------------------------------

0	初始化――刚new出来
1	连接
2	发送
3	接收完成――原始数据
4	解析完成――

---------------------------------------------------------------------------------------

jsonp――跨域

跨域：从一个域名，读另一个域名的东西

aaa.baidu.com	->	bbb.baidu.com

document.domain='baidu.com';

---------------------------------------------------------------------------------------

jsonp：
<script src="">

---------------------------------------------------------------------------------------

正则――方便

正则――字符串

字符串：
substring
split
charAt
indexOf/lastxxx
toUpperCase/Lowerxxx
replace

---------------------------------------------------------------------------------------

正则――不是必须用，特别方便

---------------------------------------------------------------------------------------

正则表达式――规则表达式
把一套规则，告诉计算机，计算就可以替咱们做事


规则：
dancingblue@126.com
张三
13548798789
010-32134243
北京市 朝阳区 xxx楼 3-201

---------------------------------------------------------------------------------------

正则――规则

---------------------------------------------------------------------------------------

对象
RegExp

str.indexOf('字符串')
str.search(正则)

---------------------------------------------------------------------------------------

javascript教程
JavaScript教程

javascript
	Javascript
	JavaScript
	JAVAscript
	JAvaScrIPT

---------------------------------------------------------------------------------------

var arr=[1,2,3];
var arr=new Array(1,2,3);

var show=function (){};
var show=new Function();

---------------------------------------------------------------------------------------

转义：有些字符不方便、打不出来――用转义代替

---------------------------------------------------------------------------------------

总结：
正则――规则
search――indexOf

两种写法：
1.new RegExp
2./规则/选项

---------------------------------------------------------------------------------------

正则――懒、贪婪

---------------------------------------------------------------------------------------

量词――数量、个数
{12}

虚――许多、好些、一堆
+	若干（）

---------------------------------------------------------------------------------------

贪婪――匹配尽可能长的东西

---------------------------------------------------------------------------------------

replace(字符串|正则, 字符串|函数);

---------------------------------------------------------------------------------------

g――全部

match		返回数组，找到所有匹配的东西
replace		替换，返回字符串

replace(字符串|正则, 字符串|function)

---------------------------------------------------------------------------------------

正则：规则

search/indexOf
match	->	数组
replace	->	

new RegExp
//  简写方式

字符串中//算一个字符,输出是/

选项：	i	g

量词――个数
1.{12}
2.+

转义

---------------------------------------------------------------------------------------

方括号
1.任选一个
/a[abc]c/	aac abc acc	adc ×

不需要分隔
[a,c,v]		a || c || v || ,

方括号――只代表一个字
/a[abc]c/
abc   
abbc  ×

*** 正则中：如果不加量词――永远一个 ***

2.范围
[a-z]
[a-z0-9]

[1-58]	1-5以及8

[0-a]	一般不这么写

3.排除
[^abc]	除了abc
[^a-z]
[^a-z0-9]

---------------------------------------------------------------------------------------
方括号与|在表示或者 任何之一的区别

[a-z]     a|b|c|....|z

[a.]      a|\.

[^ab]     ^a|^b


前后都有2位以上（包括2位）

或者特别少。就像你说的a|b这种。。
不是分组。不要括号也行 


abc(asd|dsa) 当某个位置上，这个字符有两种或两种以上
可能的时候，用[]


XX[a-z]XXXX
表示第三位置可以是abcd...z其中某个

XX[a-z][a-z][a-z]XXX
当第三，第四，第五位置都是a...z的时候这种情况下可以合并

XX[a-z]{3}XXX
看情况就好

---------------------------------------------------------------------------------------
转义：
\d	[0-9]		数字		digit
\w	[0-9a-zA-Z_]	单词		word
\s			空白		space
.			任意字符

\D	[^0-9]		非数字
\W	[^a-zA-Z0-9_]	非单词
\S			非空白

\d+\D=>.  意思是数字+非数字=任意字符

---------------------------------------------------------------------------------------

量词：
{n}		正好n个
{n,m}		最少n个，最多m个
{n,}		最少n个，最多不限
{0,m}		最少不限，最多m个

+		{1,}	任意个（得有）		最少1个
*		{0,}	任意个（可以没有）			不推荐
?		{0,1}	可有可无（最多1个）

---------------------------------------------------------------------------------------

座机号
58789856
010-58789856

区号	3/4个	0开头、第二位不能是0
	(0[1-9]\d{1,2}\-)?

座机号	第一个不能是0,	7、8位
	[1-9]\d{6,7}

/(0[1-9]\d{1,2}\-)?[1-9]\d{6,7}/

---------------------------------------------------------------------------------------

关于量词：
量词只管前面的一个东西
ab+
abbbbbbb
abababab

分组：
(ab)+
ababab
ababa	一组之内――要么都出来，要么都没有

---------------------------------------------------------------------------------------

str.search(re)
str.match(re)
str.replace(re)
re.test(str)

---------------------------------------------------------------------------------------

test――

---------------------------------------------------------------------------------------

修饰：条件
行首、行尾

---------------------------------------------------------------------------------------

test：
默认――字符串中有一部分符合要求，就是true
解决：加^$限制一下

---------------------------------------------------------------------------------------

^$
默认：整个字符串的开头、结尾		不会识别换行
加上m：每一行的开头、结尾			会识别换行

m	muti-line	多行模式

---------------------------------------------------------------------------------------

邮箱：
dancingblue@126.com
42342342@qq.com
dfs4312@sina.com.cn

英文、数字、下划线、点	@	数字、字母、中划线	(.	字母(2-4))1-2个
[\w\.]+			@	[0-9a-z\-]+		(\.	[a-z]{2,4}){1,2}
[\w\.]+@[0-9a-z\-]+(\.[a-z]{2,4}){1,2}

---------------------------------------------------------------------------------------

qq号
数字	第一位不能是0	5-13
/^[1-9]\d{4,12}$/

---------------------------------------------------------------------------------------

12-100

12-19		1[2-9]
20-99		[2-9]\d
100		100

1[2-9]|[2-9]\d|100

---------------------------------------------------------------------------------------

^1[2-9]|[2-9]\d|100$
(^1[2-9])|([2-9]\d)|(100$)
1.以12-19开头
2.出现[2-9]\d
3.100结尾


12+8/2	=>	运算优先级

---------------------------------------------------------------------------------------

utf-8
\u	unicode――统一编码	utf-8

---------------------------------------------------------------------------------------

表单校验：
1.邮箱
2.年龄	12-500
3.生日
	1984/03/5
	1984-3-05
	1984 3 05
	1984年3月05日
4.身份证
	18位	最后一位有可能是x
5.网址
	http://baidu.com/
	http://baidu.com
	https://baidu.com/
	https://baidu.com
	baidu.com
	baidu.com/

	http://www.baidu.com/
	http://abc.www.baidu.com/
	http://xxx.xx,xxx.abc.www.baidu.com.cn/
6.手机号
	

---------------------------------------------------------------------------------------

dancingblue
 dancingblue

---------------------------------------------------------------------------------------

aBtn[i].className='btn';

this.className='btn active';

'btn box active'->addClass('aaa')->'btn box active aaa'

'btn box active'->removeClass('active')->'btn box'

---------------------------------------------------------------------------------------

修饰：	^$
\b	boundary（边界）
空格、tab、逗号、句号。。。

abc box,222.i aaa_2

单词：英文、数字、下划线


'box'
/\bbox/

---------------------------------------------------------------------------------------

getElementsByClassName
getByClass

'box aaa'=='box'

---------------------------------------------------------------------------------------

search
match
replace

re.test

选项：
i	忽略大小写
g	所有的
m	多行（行首、行尾）

方括号
1.不需要分隔		[a,b,c]
2.任何东西――只代表一个字
	[1-58]	1->5|8

量词
只管前面一个
不加量词：1个

转义
\d
\w
\s
.

修饰
^$
\b




















