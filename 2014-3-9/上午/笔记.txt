jq――方便

jq和js一样


window.onload=xxx		$(function (){})
byId/TagName/Name		$('#div1')
oDiv.onclick=xxx		$('..').click(function );

hover(fnOver, fnOut)
toggle(fn1, fn2)

---------------------------------------------------------------------------------------

$('#div1 ul')
$('li.box')
$('input[type=button]')

---------------------------------------------------------------------------------------

eq

---------------------------------------------------------------------------------------

$('#div1 ul')
$('#div1').find('ul li.box input[type=button]:first')

jq里：别用slide、fade

---------------------------------------------------------------------------------------

创建		$()

appendTo()	插到最后
prependTo()	插到最前
insertBefore

---------------------------------------------------------------------------------------

所有的事件――绑定

bind(事件名, 函数)
unbind

bind	给已有元素加事件
live	给未来元素加事件――事件委托

live
die

delegate
die

on

父级.removeChild(子级)
子级.remove()

---------------------------------------------------------------------------------------

mouseover/mouseout
原生：
srcElement||target

fromElement||relatedTarget
toElement||relatedTarget

---------------------------------------------------------------------------------------

mouseenter/mouseleave		hover		没问题的

---------------------------------------------------------------------------------------

		原生JS			jQuery
阻止冒泡		cancelBubble=true	return false
阻止默认事件	return false		return false
		preventDefault


addEventListener/preventDefault

---------------------------------------------------------------------------------------

width		width				样式width
outerWidth	width+padding+border		offsetWidth

---------------------------------------------------------------------------------------

position	父级	offsetLeft
offset		页面	getPos()

---------------------------------------------------------------------------------------

循环（遍历、迭代）：
each

原生对象――用原生方法选出来的
jq对象――用$选出来的

$().get(0)	$()[0]		原生

jq->原生
get(0)	[0]
原生->jq
$(obj)

---------------------------------------------------------------------------------------

$.ajax({
	url		地址
	data		数据{}
	type		类型――get/post...
	success		成功
	error		错误
	complete	不论成功、失败都执行
	timeout		超时ms
});


1.php?a=12&b=5

---------------------------------------------------------------------------------------

插件：别人写好的程序――拿来直接用

优点：
1.方便

缺点：
1.有很多bug
2.跟需求有很大出入
3.性能

插件：
写插件的人	√
用插件的人	

---------------------------------------------------------------------------------------


















