严格模式：修复语言的bug
1.没定义的变量
2.禁用with
3.this
4.函数只能在顶级定义――不能在语法结构里定义

In strict mode code, functions can only be declared at top level or immediately within another function. 

(function (){})();

类似作用域、一个标签

if()
{
	function 
}

------------------------------------------------------------------------------------------------

面向对象：封装――分工

对象组成：
1.属性：变量――静态
2.方法：函数――动态

人：
属性：名字、性别、身高、体重、籍贯...
方法：动作（吃、跑...）

------------------------------------------------------------------------------------------------

new
1.
2.

------------------------------------------------------------------------------------------------

类		Array	本身没有功能，只是用来生成对象――工厂
对象(实例)	arr	有功能，被类生成出来的――产品

var arr=new Array();

**JS中：类==构造函数

prototype――
作用：给一个类，加东西――每个对象都有了		类似css的class
用途：给系统对象补充功能

------------------------------------------------------------------------------------------------

typeof	不够精确

------------------------------------------------------------------------------------------------

this优先级：
new		空object
定时器		window
事件		发生事件的对象
方法		所有者
其他		undefined||window

------------------------------------------------------------------------------------------------

#div1 ul li .box

复合条件
	#div1 ul li.box
	li#li1

属性
	input[type=button]

伪类
	input:first


li.box
li#li1
li[title=aaa]
li:first

.box.box2
.box#box1
.box[type=xxx]
.box:first

------------------------------------------------------------------------------------------------

$(function (){})	ready
$('#div1')		选择
$(oDiv)			包装

------------------------------------------------------------------------------------------------

ready		onload
快

------------------------------------------------------------------------------------------------

//$('div').css('background', 'red');
$('div');

选择器，只负责选元素――放着（不做处理）
	后面其他方法，处理这些元素

$('xxx').click(function (){});

$(oDiv).css('background', 'red')

------------------------------------------------------------------------------------------------

不能用this
1.定时器
2.行间事件
3.套一层
4.绑定――


强行修改this指向  他们传入的this是什么，this就是什么
call(<this>, 参数....)
apply(<this>,[参数，参数...])


------------------------------------------------------------------------------------------------

$('#div1').mouseenter(function (){
});

------------------------------------------------------------------------------------------------

$('#div1').css('width');
$('#div1').css('width', '300px');
$('#div1').css({width: '300px', height: '400px'});


$(this).css('width');

------------------------------------------------------------------------------------------------

$('div').attr('title');

------------------------------------------------------------------------------------------------

成对：

oBtn.onclick=function (){};

addEvent/removeEvent
attach/detach
.onclick=function /.onclick=null

------------------------------------------------------------------------------------------------

getAttribute/setAttribute

getAttribute
1.setAttribute设置的
2.行间

setAttribute――往行间加东西

------------------------------------------------------------------------------------------------

click/...
mouseenter/leave
hover
toggle

------------------------------------------------------------------------------------------------

toggle

3个参数

0	0
1	1
2	2
3	0
4	1
5	2

------------------------------------------------------------------------------------------------

$('#div1').animate({width: xxx, height: xx});

------------------------------------------------------------------------------------------------

		原生				JQ
取消冒泡	cancelBubble=true		return false
默认事件	return false;			return false
		preventDefault()

$('#btn1').bind('click', function (){
});

------------------------------------------------------------------------------------------------

$('<div>asdfs</div>').appendTo();

var a=12;

a=5;


children=元素
childNodes=元素+文本

元素节点：标签、p、span
文本节点：文字

$().appendTo('#div1 ul li.box');


$('input')
$('<input />')

专事专用


$('xxx').insertBefore('li');

------------------------------------------------------------------------------------------------

父级.removeChild(子级)
子级.remove();

------------------------------------------------------------------------------------------------

get()	原生
eq()	jq

index()
把所有选中元素的index加起来――和
	同级元素

$(this).index()

------------------------------------------------------------------------------------------------

$('#div1 ul');
$('#div1').find('ul');

$('#div1').find().css();

------------------------------------------------------------------------------------------------

$('li').each(function (index, element){
	this==element
});

------------------------------------------------------------------------------------------------

$.ajax({
	url,type,data,success,error,timeout,complete,cbName
});

------------------------------------------------------------------------------------------------

0	创建
1	发送
2	接收完成
3	解析
4	解析完成


....&cb=jsonp3034234234923&...

------------------------------------------------------------------------------------------------

jq添加插件
$.fn.extend({
	aaa:	function ()
	{
	}
})

$.fn.aaa=function ()
{
};

$.fn.aaa=xxx
$.prototype.aaa=xxx

------------------------------------------------------------------------------------------------

继承――
对象化组件












